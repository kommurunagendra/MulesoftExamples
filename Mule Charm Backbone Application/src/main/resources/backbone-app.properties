#
# ActiveMQ broker
#
broker1.host=tcp://localhost:61616
broker1.username=admin
broker1.password=admin
broker1.responsetimeout=10000
broker1.maxredelivery=3
#
# ActiveMQ broker 2
#
broker2.host=tcp://localhost:61616
broker2.username=admin
broker2.password=admin
broker2.responsetimeout=10000
broker2.maxredelivery=3
#
# ActiveMQ broker 3
#
broker3.host=tcp://localhost:61616
broker3.username=admin
broker3.password=admin
broker3.responsetimeout=10000
broker3.maxredelivery=3
#
# ActiveMQ broker 4
#
broker4.host=tcp://localhost:61616
broker4.username=admin
broker4.password=admin
broker4.responsetimeout=10000
broker4.maxredelivery=3
#
# ActiveMQ broker 5
#
broker5.host=tcp://localhost:61616
broker5.username=admin
broker5.password=admin
broker5.responsetimeout=10000
broker5.maxredelivery=3
#
# ActiveMQ broker 6
#
broker6.host=tcp://localhost:61616
broker6.username=admin
broker6.password=admin
broker6.responsetimeout=10000
broker6.maxredelivery=3

#
# JMS QUEUES for backbone.
# Default broker for routing static messages and for listening incoming messages should be configured as broker1 always.
#
backbone-app.sync=backbone-app.sync
backbone-app.async=backbone-app.async
backbone-app.outbound=dynac-interface-app.async
backbone-exception-queue=backbone-app.exception

vm.responsetimeout=10000

# STATIC ROUTING TABLE
# MESSAGE_TYPE=DESTINATION_APP(S)

# BRIDGE OUTBOUND APP (APP IS DESCOPED)#
#bridge_info_request = bridge-out-app.sync
#bridge_info_reply = dynac-interface-app.sync
#bridge_control_request = bridge-out-app.sync
#bridge_control_reply = dynac-interface-app.sync
#bridge_inventory_subscription = dynac-interface-app.async
#bridge_inventory_publish = bridge-out-app.async
#bridge_status_subscription = bridge-out-app.async
#bridge_status_publish = dynac-interface-app.async
# BRIDGE INBOUND APP #
bridge_info_request = bridge-in-app.sync
bridge_info_reply = dynac-interface-app.sync
bridge_inventory_subscription = dynac-interface-app.async
bridge_inventory_publish = bridge-in-app.async
bridge_status_subscription = bridge-in-app.async
bridge_status_publish = dynac-interface-app.async

# NDW-SG OUTBOUND APP #
#ndw_sg_info_request = ndw-interface-sg-out-app.sync
#ndw_sg_info_reply = dynac-interface-app.sync
#ndw_sg_inventory_subscription = dynac-interface-app.async
#ndw_sg_inventory_publish = ndw-interface-sg-out-app.async
#ndw_sg_status_subscription = ndw-interface-sg-out-app.async
#ndw_sg_status_publish = dynac-interface-app.async
# NDW-AVG INBOUND APP #
ndw_avg_info_request = ndw-interface-avg-in-app.sync
ndw_avg_info_reply = dynac-interface-app.sync
ndw_avg_inventory_subscription = dynac-interface-app.async
ndw_avg_inventory_publish = ndw-interface-avg-in-app.async
ndw_avg_status_subscription = ndw-interface-avg-in-app.async
ndw_avg_status_publish = dynac-interface-app.async
# NDW-SG INBOUND APP (USED ONLY DYNAMIC ROUTING) #
ndw_sg_info_request = ndw-interface-sg-in-app.sync
ndw_sg_info_reply = dynac-interface-app.sync
ndw_sg_inventory_subscription = dynac-interface-app.async
ndw_sg_inventory_publish = ndw-interface-sg-in-app.async
ndw_sg_status_subscription = ndw-interface-sg-in-app.async
ndw_sg_status_publish = dynac-interface-app.async

# DRIP APP #
drip_info_request = drip-app.sync
drip_info_reply = dynac-interface-app.sync
drip_control_request = drip-app.sync
drip_control_reply = dynac-interface-app.sync
drip_inventory_subscription = dynac-interface-app.async
drip_inventory_publish = drip-app.async
drip_status_subscription = drip-app.async
drip_status_publish = dynac-interface-app.async

# BERMDRIP APP #
bermdrip_info_request = bermdrip-app.sync
bermdrip_info_reply = dynac-interface-app.sync
bermdrip_control_request = bermdrip-app.sync
bermdrip_control_reply = dynac-interface-app.sync
bermdrip_inventory_subscription = dynac-interface-app.async
bermdrip_inventory_publish = bermdrip-app.async
bermdrip_status_subscription = bermdrip-app.async,otmc-interface-inbound-app.async
bermdrip_status_publish = dynac-interface-app.async

# DETECTOR SI OUTBOUND APP #
detector_si_info_request = detector-si-out-app.sync
detector_si_info_reply=dynac-interface-app.sync
detector_si_control_request = detector-si-out-app.sync
detector_si_control_reply=dynac-interface-app.sync
detector_si_data_subscription = detector-si-out-app.async,traffic-app.async
detector_si_data_publish = dynac-interface-app.async,traffic-app.async
detector_si_inventory_subscription = dynac-interface-app.async,traffic-app.async
detector_si_inventory_publish = detector-si-out-app.async,traffic-app.async
detector_si_status_subscription = detector-si-out-app.async,traffic-app.async
detector_si_status_publish = dynac-interface-app.async,traffic-app.async

# DETECTOR SI INBOUND APP (USE ONLY DYNAMIC ROUTING) #
detector_si_inventory_subscription = detector-si-in-app.async
detector_si_inventory_publish = detector-si-in-app.async
detector_si_info_request = detector-si-in-app.sync
detector_si_data_subscription = detector-si-in-app.async
detector_si_data_publish = dynac-interface-app.async

# DETECTOR CAT OUTBOUND APP #
detector_cat_info_request = detector-cat-out-app.sync
detector_cat_info_reply=dynac-interface-app.sync
detector_cat_data_subscription = detector-cat-out-app.async
detector_cat_data_publish = dynac-interface-app.async
detector_cat_inventory_subscription = dynac-interface-app.async
detector_cat_inventory_publish = detector-cat-out-app.async
detector_cat_status_subscription = detector-cat-out-app.async
detector_cat_status_publish = dynac-interface-app.async

# DETECTOR CAT INBOUND APP (USE ONLY DYNAMIC ROUTING) #
detector_cat_inventory_publish=detector-cat-in-app.async
detector_cat_inventory_subscription=detector-cat-in-app.async
detector_cat_data_subscription=detector-cat-in-app.async
detector_cat_info_request=detector-cat-in-app.sync

# MSI APP #
msi_info_request=msi-app.sync
msi_info_reply=dynac-interface-app.sync
msi_control_request=msi-app.sync
msi_control_reply=dynac-interface-app.sync
msi_inventory_subscription=dynac-interface-app.async,traffic-app.async
msi_inventory_publish=msi-app.async,traffic-app.async
msi_status_subscription=msi-app.async,traffic-app.async
msi_status_publish=dynac-interface-app.async,traffic-app.async

# PRISM APP #
prism_info_request=prism-app.sync
prism_info_reply=dynac-interface-app.sync
prism_control_request=prism-app.sync
prism_control_reply=dynac-interface-app.sync
prism_inventory_subscription=dynac-interface-app.async,traffic-app.async
prism_inventory_publish=prism-app.async,traffic-app.async
prism_status_subscription=prism-app.async,traffic-app.async,otmc-interface-inbound-app.async
prism_status_publish=dynac-interface-app.async,traffic-app.async

# NINA INBOUND APP #
nina_info_request = ti-nina-interface-app.sync
nina_inventory_subscription = dynac-interface-app.async
nina_inventoy_publish = ti-nina-interface-app.async
nina_status_subscription = ti-nina-interface-app.async
nina_status_publish = dynac-interface-app.async
nina_inventory_publish = ti-nina-interface-app.async

# NINA OUTBOUND APP #
#nina_info_request = nina-interface-app.sync
#nina_info_reply = dynac-interface-app.sync
#nina_inventory_subscription = dynac-interface-app.async
#nina_inventoy_publish = nina-interface-app.async
#nina_status_subscription = nina-interface-app.async
#nina_status_publish = dynac-interface-app.async
#nina_inventory_publish = nina-interface-app.async

# LOCATION APP #
location_info_request = location-app.sync

# INCIDENT APP #
incident_status_subscription = incident-app.async
incident_status_publish = ndw-interface-app.async

# WEATHER APP #
weather_inventory_subscription=dynac-interface-app.async
weather_inventory_publish=weather-app.async
weather_status_subscription=weather-app.async
weather_status_publish=dynac-interface-app.async
weather_info_request=weather-app.sync
weather_info_reply=dynac-interface-app.sync

# HARDSHOULDER APP #
hardshoulder_info_request=hardshoulder-app.sync
hardshoulder_info_reply=dynac-interface-app.sync
hardshoulder_inventory_subscription=dynac-interface-app.async
hardshoulder_inventory_publish=hardshoulder-app.async
hardshoulder_status_subscription=dynac-interface-app.async
hardshoulder_status_publish=hardshoulder-app.async

# TLC APP #
tlc_inventory_subscription=dynac-interface-app.async
tlc_inventory_publish=tlc-app.async
tlc_status_subscription=tlc-app.async,otmc-interface-inbound-app.async
tlc_status_publish=dynac-interface-app.async
tlc_info_request=tlc-app.sync
tlc_info_reply=dynac-interface-app.sync
tlc_control_request=tlc-app.sync
tlc_control_reply=dynac-interface-app.sync

# WIND APP #
wind_inventory_subscription=dynac-interface-app.async
wind_inventory_publish=wind-app.async
wind_status_subscription=wind-app.async
wind_status_publish=dynac-interface-app.async
wind_info_request=wind-app.sync
wind_info_reply=dynac-interface-app.sync
wind_control_request=wind-app.sync
wind_control_reply=dynac-interface-app.sync

# RS APP #
route_inventory_subscription=dynac-interface-app.async
route_inventory_publish=route-app.async
route_status_subscription=route-app.async
route_status_publish=dynac-interface-app.async
route_info_request=route-app.sync
route_info_reply=dynac-interface-app.sync

# TRAVELTIME APP (USE ONLY DYNAMIC ROUTING) #
traveltime_inventory_publish=traveltime-in-app.async
traveltime_inventory_subscription=dynac-interface-app.async
traveltime_status_subscription=dynac-interface-app.async
traveltime_status_publish=traveltime-in-app.async
traveltime_info_request=traveltime-in-app.sync
traveltime_info_reply=dynac-interface-app.sync

#OTMC interface outbound app

otmc_outbound_inventory_publish=otmc-interface-outbound-app.async
otmc_outbound_status_subscription=otmc-interface-outbound-app.async
otmc_outbound_status_publish=dynac-interface-app.async
otmc_outbound_organisation_publish=otmc-interface-outbound-app.async
otmc_outbound_info_request=dynac-interface-app.sync
otmc_outbound_info_reply=otmc-interface-outbound-app.sync

# OTMC Interface Inbound app
otmc_inventory_publish=otmc-interface-inbound-app.async 
otmc_status_subscription =  otmc-interface-inbound-app.async 
otmc_status_publish=dynac-interface-app.async 
otmc_organisation_publish = otmc-interface-inbound-app.async 
otmc_inventory_subscription = otmc-interface-inbound-app.async 
otmc_info_request=otmc-interface-inbound-app.sync 
otmc_info_reply=dynac-interface-app.sync 
otmc_inventory_subscription=otmc-interface-inbound-app.async 
otmc_inventory_publish= dynac-interface-app.async

# OTMC service app
otmc_services_control_request=dynac-interface-app.sync 
otmc_services_control_reply=otmc-services-app.sync 
otmc_services_info_request=otmc-interface-outbound-app.sync 
otmc_services_info_reply=otmc-services-app.sync 
otmc_services_status_subscription=otmc-services-app.async,otmc-interface-inbound-app.async 
otmc_services_status_publish=otmc-services-app.async

# OTMC services outbound app
otmc_services_inventory_publish=otmc-services-app.async 
otmc_services_info_request=otmc-services-app.sync 
otmc_services_info_reply=otmc-interface-outbound-app.sync

# SITUATION APP #
situation_status_subscription=dynac-interface-app.async
situation_status_publish=situation-app.async
situation_info_request=situation-app.sync
situation_info_reply=dynac-interface-app.sync
# PARKING FACILITY APP #
parking_facility_inventory_subscription=dynac-interface-app.async
parking_facility_inventory_publish=parking-facility-app.async
parking_facility_status_subscription=parking-facility-app.async,otmc-interface-inbound-app.async
parking_facility_status_publish=dynac-interface-app.async
parking_facility_info_request=parking-facility-app.sync
parking_facility_info_reply=dynac-interface-app.sync
#
# Dynamic routing table
# Queue_name = destination_broker,destination_queue_name
#
dynac-interface-app.sync =  broker1, dynac-interface-app.sync
dynac-interface-app.async =  broker1, dynac-interface-app.async

ady-interface-app.sync = broker1, ady-interface-app.sync 
ady-interface-app.async = broker1, ady-interface-app.async 

route-app.async = broker1, route-app.async
route-app.sync = broker1, route-app.sync

bridge-out-app.sync = broker1, bridge-out-app.sync
bridge-out-app.async = broker1, bridge-out-app.async
bridge-in-app.sync=broker1, bridge-in-app.sync
bridge-in-app.async=broker1, bridge-in-app.async

drip-app.sync =  broker1, drip-app.sync
drip-app.async =  broker1, drip-app.async

bermdrip-app.sync =  broker1, bermdrip-app.sync
bermdrip-app.async =  broker1, bermdrip-app.async

msi-app.sync =  broker1, msi-app.sync
msi-app.async =  broker1, msi-app.async

detector-si-out-app.sync =  broker1, detector-si-out-app.sync
detector-si-out-app.async =  broker1, detector-si-out-app.async

detector-si-in-app.sync =  broker1, detector-si-in-app.sync
detector-si-in-app.async =  broker1,detector-si-in-app.async

detector-cat-out-app.sync =  broker1, detector-cat-out-app.sync
detector-cat-out-app.async =  broker1, detector-cat-out-app.async

detector-cat-in-app.sync =  broker1, detector-cat-in-app.sync
detector-cat-in-app.async =  broker1, detector-cat-in-app.async

nina-interface-app.sync = broker1, nina-interface-app.sync
nina-interface-app.async =broker1, nina-interface-app.async

ti-nina-interface-app.sync = broker1, ti-nina-interface-app.sync
ti-nina-interface-app.async = broker1, ti-nina-interface-app.async
fep-interface-app.sync =  broker1, fep-interface-app.sync
fep-interface-app.async =  broker1, fep-interface-app.async

ndw-interface-sg-in-app.sync=  broker1, ndw-interface-sg-in-app.sync
ndw-interface-sg-in-app.async=  broker1, ndw-interface-sg-in-app.async

ndw-interface-sg-out-app.async=  broker1, ndw-interface-sg-out-app.async
ndw-interface-sg-out-app.sync=  broker1, ndw-interface-sg-out-app.sync

ndw-interface-vms-app.sync=  broker1, ndw-interface-vms-app.sync
ndw-interface-vms-app.async=  broker1, ndw-interface-vms-app.async

ndw-interface-avg-out-app.sync = broker1, ndw-interface-avg-out-app.sync
ndw-interface-avg-out-app.async = broker1, ndw-interface-avg-out-app.async

ndw-interface-avg-in-app.sync = broker1, ndw-interface-avg-in-app.sync
ndw-interface-avg-in-app.async = broker1, ndw-interface-avg-in-app.async
ndw-interface-vms-app.sync=  broker1, ndw-interface-vms-app.sync
ndw-interface-vms-app.async=  broker1, ndw-interface-vms-app.async

hardshoulder-app.sync = broker1, hardshoulder-app.sync
hardshoulder-app.async = broker1, hardshoulder-app.async

prism-app.sync =  broker1, prism-app.sync
prism-app.async =  broker1, prism-app.async

location-app.sync =  broker1,location-app.sync
location-app.async =  broker1,location-app.async

incident-app.sync =  broker1, incident-app.sync
incident-app.async =  broker1, incident-app.async

tlc-app.sync = broker1, tlc-app.sync
tlc-app.async = broker1, tlc-app.async

wind-app.sync  = broker1, wind-app.sync
wind-app.async = broker1, wind-app.async

weather-app.sync  = broker1, weather-app.sync
weather-app.async = broker1, weather-app.async

traffic-app.sync = broker1, traffic-app.sync
traffic-app.async = broker1, traffic-app.async

divv-interface-app.sync = broker1, divv-interface-app.sync
divv-interface-app.async = broker1, divv-interface-app.async

otmc-interface-outbound-app.sync = broker1, otmc-interface-outbound-app.sync
otmc-interface-outbound-app.async = broker1, otmc-interface-outbound-app.async

otmc-interface-inbound-app.sync = broker1,otmc-interface-inbound-app.sync
otmc-interface-inbound-app.async = broker1,otmc-interface-inbound-app.async

otmc-services-app.sync = broker1, otmc-services-app.sync
otmc-services-app.async = broker1, otmc-services-app.async

traveltime-in-app.sync = broker1, traveltime-in-app.sync
traveltime-in-app.async = broker1, traveltime-in-app.async

parking-facility-app.sync = broker1, parking-facility-app.sync
parking-facility-app.async = broker1, parking-facility-app.async

situation-app.sync = broker1, situation-app.sync
situation-app.async = broker1, situation-app.async
ti-nina-interface-app.async =  broker1, ti-nina-interface-app.async
ti-nina-interface-app.sync =  broker1, ti-nina-interface-app.sync
#
#  JMS timeout
#
backbone.responsetimeout=10000

#
# app xsd/xslt paths
#
backbone.xslt.path=xslt/backbone/
backbone.app.xsd.path =xsd/location/flat_location_interface.xsd,xsd/bridge/flat_bridge_interface.xsd,xsd/drip/flat_drip_interface.xsd,xsd/bermdrip/flat_bermdrip_interface.xsd,xsd/incident/flat_incident_interface.xsd,xsd/hardshoulder/flat_hardshoulder_interface.xsd,xsd/detector-si/flat_detector_si_interface.xsd,xsd/msi/flat_msi_interface.xsd,xsd/prism/flat_prism_interface.xsd,xsd/weather/flat_weather_interface.xsd,xsd/tlc/flat_tlc_interface.xsd,xsd/wind/flat_wind_interface.xsd,xsd/detector-cat/flat_detector_cat_interface.xsd,xsd/nina/flat_nina_interface.xsd,xsd/route/flat_route_interface.xsd,xsd/ndw-avg/flat_ndw_avg_interface.xsd,xsd/ndw-sg/flat_ndw_sg_interface.xsd,xsd/otmc/flat_otmc_interface.xsd,xsd/otmc-outbound/flat_otmc_interface_outbound.xsd,xsd/otmc-services/flat_otmc_services_interface.xsd,xsd/traveltime/flat_traveltime_interface.xsd,xsd/parking-facility/flat_parking_facility_interface.xsd

#
# Retries 
#
backbone.retry=4

#
# Indent Mode
#
backbone.default.indent=true

#
# Inbound schema validation
#
schemaValidationEnabled=true

#
#backbone async request
#
backbone.async.request=inventory_publish

#
# File interface properties
#
backbone.file.pollingFrequency=10000
backbone.file.input.sync=/var/opt/backbone-app/file/input_sync
backbone.file.input.async=/var/opt/backbone-app/file/input_async
backbone.file.processed=/var/opt/backbone-app/file/processed
backbone.file.result=/var/opt/backbone-app/file/output
#To make sure huge xml response are able to be sent back to the caller for sync requests
backbone.sync.response.timeout=60000

# REST Message trace eXisT db 
existdb.enabled=false
existdb.url.hostname=localhost
existdb.url.portnr=8080
existdb.url.restpath=exist/rest/db/apps/backbone-app
existdb.url.username=admin
existdb.url.password=admin
existdb.collectionname=backboneapp

# DETECTOR SI OUTBOUND APP #
detector_si_info_request = detector-si-out-app.sync
detector_si_info_reply=dynac-interface-app.sync
detector_si_control_request = detector-si-out-app.sync
detector_si_control_reply=dynac-interface-app.sync
detector_si_data_subscription = detector-si-out-app.async,traffic-app.async
detector_si_data_publish = dynac-interface-app.async,traffic-app.async
detector_si_inventory_subscription = dynac-interface-app.async,traffic-app.async
detector_si_inventory_publish = detector-si-out-app.async,traffic-app.async
detector_si_status_subscription = detector-si-out-app.async,traffic-app.async
detector_si_status_publish = dynac-interface-app.async,traffic-app.async