<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd">

	<sub-flow name="bridge-inventory-subscription">
		<mulexml:xslt-transformer returnClass="java.lang.String" xsl-file="xslt/bridge/bridge_inventory_subscription.xsl" doc:name="XSLT" maxActiveTransformers="5" maxIdleTransformers="2">
			<mulexml:context-property key="return_address" value="${dynac_interface.return_address}"/>
            <mulexml:context-property key="userId" value="${user_id}"/>
            <mulexml:context-property key="password" value="${password}"/>
            <mulexml:context-property key="organizationId" value="${organization_information.organization_id}"/>
		</mulexml:xslt-transformer>
		<flow-ref name="ntcip_client" doc:name="ntcip_client"/>
	</sub-flow>
	
	<sub-flow name="bridge-inventory-subscription-NTCIP-To-CDM">
        <flow-ref name="transformToXML" doc:name="transformToXML"/>
        <flow-ref name="generateUUID" doc:name="generateUUID"/>
        <dw:transform-message doc:name="Prepare bridge_inventory_subscription Message">
            <dw:input-payload/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml encoding="UTF-8"
%var timeZone = now as :string {format: "yyyy-MM-dd"} ++ "T" ++ now as :string {format: "hh:mm:ss"} ++ "Z"
---
bridge_inventory_subscription @(xmlns: "http://bridge.cdm.charm.cgi.com", version:"1.0.0") : {	
	
	meta: {
		message_id: { 
			uuid : flowVars.uuid
		},
		message_create_date: timeZone 
	},
	
	subscription_config : {
		subscription_id : {
			uuid : payload.gateInventorySubscriptionMsg.c2cMsgAdmin.subscriptionID
		},
		
		subscription_attr : {
			subscription_name : payload.gateInventorySubscriptionMsg.c2cMsgAdmin.subscriptionName,
			subscription_type : 'inventory'
		},
		
		 
		(
			all_bridges : {
				(payload.gateInventorySubscriptionMsg.device-filter.device-id-list.*device-id map {
								bridge_spec : {
									bridge_id : {
										id : $.device-id
									}
								}
							})
			} when payload.gateInventorySubscriptionMsg.device-filter.device-id-list.*device-id != null
			  otherwise true
		)
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
		<flow-ref name="outbound_cdm_backbone_oneway" doc:name="outbound_cdm_backbone_oneway" />
		<static-component>
			<return-data file="static_messages/c2cMessageReceipt_ok.xml" />
		</static-component>
	</sub-flow>
	
	<sub-flow name="bridge-inventory-publish">
		<mulexml:xslt-transformer xsl-file="xslt/bridge/bridge_inventory_publish.xsl" doc:name="construct inventory publish" returnClass="java.lang.String">
			<mulexml:context-property key="current_time_in_millis" value="#[System.currentTimeMillis()]"/>
			<mulexml:context-property key="message_uuid" value="#[function:uuid]"/>
		</mulexml:xslt-transformer>
		<flow-ref name="outbound_cdm_backbone_oneway" doc:name="to async cdm"/>
		<static-component>
			<return-data file="static_messages/c2cMessageReceipt_ok.xml"/>
		</static-component>
	</sub-flow>
	
	<sub-flow name="bridge-inventory-publish-cdmToNtcip">
		<flow-ref name="transformToXML" doc:name="transformToXML"/>
        <dw:transform-message doc:name="Prepare dMSInventoryUpdateMsg  Message">
            <dw:input-payload/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml encoding="UTF-8"
%var timeZone = now as :string {format: "yyyy-MM-dd"} ++ "T" ++ now as :string {format: "hh:mm:ss"} ++ "Z"
%namespace tmdd http://www.tmdd.org/3/messages
%namespace xsi http://www.w3.org/2001/XMLSchema-instance
---
tmdd#gateInventoryUpdateMsg : {	
	
	c2cMsgAdmin: {
		(informationalText:  'FULLSYNC' when payload.bridge_inventory_publish.inventory_config.full_sync == 'true'
		otherwise {}
		),
		subscriptionID : payload.bridge_inventory_publish.subscription_id.uuid
		},			
				
		((payload.bridge_inventory_publish.inventory_config.*bridge_inventory map {
			 gate-inventory-item : {
			 	device-inventory-header @(xsi#type : 'tmdd:DeviceInventoryHeaderCharm') : {
			 		
			 		organization-information : {
			 			organization-id : p('organization_information.organization_id')
			 		},
			 		
			 		device-id : $.bridge_id.id,
			 		
			 		device-location : {
			 			latitude : $.bridge_location_attr.position_wgs84.latitude,
			 			longitude : $.bridge_location_attr.position_wgs84.longitude
			 		},
			 		
			 		device-name : $.bridge_inventory_attr.name,
			 		
			 		device-description : $.bridge_inventory_attr.description,
			 		
			 		device-type : 'bridge',
			 		
			 		scan-on-off : $.bridge_inventory_attr.scan_enabled,
			 		
			 		scan-interval : $.bridge_inventory_attr.scan_interval,
			 		
			 		inventory-action : $.action,			 			
			 		
			 		(position-bps-code : $.bridge_location_attr.position_bps when $.bridge_location_attr.position_bps != null otherwise {}),
			 		
			 		(data-owner : $.bridge_inventory_attr.owner when $.bridge_inventory_attr.owner != null otherwise {})
			 	}
			 }
		}) when payload.bridge_inventory_publish.inventory_config.*bridge_inventory != null otherwise {}	)
}]]></dw:set-payload>
        </dw:transform-message>
		<flow-ref name="ntcip_client" doc:name="ntcip_client" />
	</sub-flow>
	
	<sub-flow name="bridge-status-subscription">
		<mulexml:xslt-transformer xsl-file="xslt/bridge/bridge_status_subscription.xsl" doc:name="construct subscription" returnClass="java.lang.String">
			<mulexml:context-property key="current_time_in_millis" value="#[System.currentTimeMillis()]"/>
			<mulexml:context-property key="message_uuid" value="#[function:uuid]"/>
		</mulexml:xslt-transformer>
		<flow-ref name="outbound_cdm_backbone_oneway" doc:name="outbound_cdm_backbone_oneway"/>
		<static-component>
			<return-data file="static_messages/c2cMessageReceipt_ok.xml"/>
		</static-component>
	</sub-flow>
	
	<sub-flow name="bridge-status-subscription-cdmToNtcip">
		<flow-ref name="transformToXML" doc:name="transformToXML"/>
        <dw:transform-message doc:name="Prepare dMSInventoryUpdateMsg  Message">
            <dw:input-payload/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml encoding="UTF-8"
%var timeZone = now as :string {format: "yyyy-MM-dd"} ++ "T" ++ now as :string {format: "hh:mm:ss"} ++ "Z"
%namespace tmdd http://www.tmdd.org/3/messages
%namespace xsi http://www.w3.org/2001/XMLSchema-instance
---
tmdd#deviceInformationSubscriptionMsg : {	
	organization-information : {
		organization-id : p('organization_information.organization_id')
	},
	
	device-type : 'bridge',
	
	device-information-type : 'device status',
	
	c2cMsgAdmin : {
		returnAddress : p('dynac_interface.return_address'),
		
		subscriptionAction : {
			subscriptionAction-item : 'replaceSubscription'
		},
		
		subscriptionType : {
			subscriptionType-item : 'onChange'
		},
		
		subscriptionID : payload.bridge_status_subscription.subscription_config.subscription_id.uuid,
		
		subscriptionName : payload.bridge_status_subscription.subscription_config.subscription_attr.subscription_name,
		
		subscriptionFrequency : 1
	}
}]]></dw:set-payload>
        </dw:transform-message>
		<flow-ref name="ntcip_client" doc:name="ntcip_client" />
	</sub-flow>
	
	<sub-flow name="bridge-status-publish">
		<mulexml:xslt-transformer returnClass="java.lang.String" xsl-file="xslt/bridge/bridge_status_publish.xsl" doc:name="XSLT">
		 	<mulexml:context-property key="organizationId" value="${organization_information.organization_id}"/>
		</mulexml:xslt-transformer>
		<flow-ref name="ntcip_client" doc:name="ntcip_client"/>
	</sub-flow>
	
	<sub-flow name="bridge-status-publish-NTCIP-To-CDM">
		<flow-ref name="transformToXML" doc:name="transformToXML"/>
        <flow-ref name="generateUUID" doc:name="generateUUID"/>
        <dw:transform-message doc:name="Prepare bridge_status_publish  Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml encoding="UTF-8"
%var timeZone = now as :string {format: "yyyy-MM-dd"} ++ "T" ++ now as :string {format: "hh:mm:ss"} ++ "Z"
%namespace tmdd http://www.tmdd.org/3/messages
%namespace xsi http://www.w3.org/2001/XMLSchema-instance

%var dateTimeToTimeStamp = (data1, data2) ->  data1[0..3] ++ "-" ++ data1[4..5] ++ "-" ++ data1[6..7] ++ "T" ++  data2[0..1] ++  ":" ++  data2[2..3] ++  ":" ++  data2[4..5] ++ "Z"

---
bridge_status_publish @(xmlns: "http://bridge.cdm.charm.cgi.com", version:"1.0.0") : {	
	
	meta: {
		message_id: { 
			uuid : flowVars.uuid
		},
		message_create_date: timeZone 
	},
	
	subscription_id: {
		uuid : payload.gateStatusUpdateMsg.c2cMsgAdmin.subscriptionID
	},
	
	((payload.gateStatusUpdateMsg.*gate-status-item map {
			 bridge_publish : {
			 	bridge_id : {
			 		id : $.device-status-header.device-id
			 	},
			 	bridge_inventory_attr : {
			 		name : 'name',
            		scan_enabled : false,
            		scan_interval : 0,
            		(owner : $.device-status-header.data-owner when $.device-status-header.data-owner != null otherwise {})
			 	},
			 	bridge_status_attr : {
			 		timestamp : dateTimeToTimeStamp($.device-status-header.last-comm-time.date,$.device-status-header.last-comm-time.time),
			 		
			 		(status : 'opening' when $.gate-status  == "opening" otherwise {}),
			 		(status : 'open' when $.gate-status == "gate open" otherwise {}),				
					(status : 'closing' when $.gate-status == "closing" otherwise {}),	
					(status : 'closed' when $.gate-status == "gate closed" otherwise {}),	
					(status : 'unknown' when $.gate-status == "gate partially opened closed" otherwise {}),	
					
			 		source : 'BrugOpen'
			 	}
			 }
		}) when payload.gateStatusUpdateMsg.*gate-status-item != null otherwise {}	)
}]]></dw:set-payload>
        </dw:transform-message>
		<byte-array-to-string-transformer doc:name="Byte Array to String"/>
		<flow-ref name="outbound_cdm_backbone_oneway" doc:name="outbound_cdm_backbone_oneway" />
		<static-component>
			<return-data file="static_messages/c2cMessageReceipt_ok.xml" />
		</static-component>
	</sub-flow>
	
	<sub-flow name="bridge-info-request-inventory">		
		<mulexml:xslt-transformer xsl-file="xslt/bridge/bridge_info_request_inventory.xsl" doc:name="construct bridge info request" returnClass="java.lang.String">
			<mulexml:context-property key="current_time_in_millis" value="#[System.currentTimeMillis()]"/>
			<mulexml:context-property key="message_uuid" value="#[function:uuid]"/>
		</mulexml:xslt-transformer>
		<flow-ref name="outbound_cdm_backbone_request_response" doc:name="to CDM"/>
		<mulexml:xslt-transformer xsl-file="xslt/bridge/bridge_info_reply_inventory.xsl" doc:name="reply to ntcip response"/>
	</sub-flow>
	
	<sub-flow name="bridge-info-request-status">		
		<mulexml:xslt-transformer xsl-file="xslt/bridge/bridge_info_request_status.xsl" doc:name="construct bridge info request" returnClass="java.lang.String">
			<mulexml:context-property key="current_time_in_millis" value="#[System.currentTimeMillis()]"/>
			<mulexml:context-property key="message_uuid" value="#[function:uuid]"/>
		</mulexml:xslt-transformer>
		<flow-ref name="outbound_cdm_backbone_request_response" doc:name="to CDM"/>
		<mulexml:xslt-transformer xsl-file="xslt/bridge/bridge_info_reply_status.xsl" doc:name="reply to ntcip response">
		<mulexml:context-property key="organizationId" value="${organization_information.organization_id}"/>
		</mulexml:xslt-transformer>
	</sub-flow>
	
	<sub-flow name="bridge-control-request">
		<set-variable value="#[xpath3('/tmdd:gateControlRequestMsg/device-control-request-header/organization-requesting/organization-id')]" variableName="organizationid" doc:name="Organization Id" />
		<set-variable value="#[xpath3('/tmdd:gateControlRequestMsg/device-control-request-header/request-id')]"	variableName="requestid" doc:name="Request Id" />
		<mulexml:xslt-transformer xsl-file="xslt/bridge/bridge_control_request.xsl" doc:name="construct control" returnClass="java.lang.String">
			<mulexml:context-property key="current_time_in_millis" value="#[System.currentTimeMillis()]"/>
			<mulexml:context-property key="message_uuid" value="#[function:uuid]"/>
		</mulexml:xslt-transformer>
		<flow-ref name="outbound_cdm_backbone_request_response" doc:name="to cdm"/>
		<mulexml:xslt-transformer xsl-file="xslt/bridge/bridge_control_reply.xsl" doc:name="reply to ntcip response">
			<mulexml:context-property key="organization_id" value="#[organizationid]" />
			<mulexml:context-property key="request_id" value="#[requestid]" />
		</mulexml:xslt-transformer>
	</sub-flow>
</mule>